/*
 * @file console.cpp (180.ARM_Peripherals/Startup_Code/console.cpp)
 *
 *  Created on: 14/04/2013
 *      Author: pgo
 */

#include <derivative.h>
#include "system.h"
#include "hardware.h"
#if defined(USBDM_UART0_IS_DEFINED) || defined(USBDM_UART1_IS_DEFINED) || defined(USBDM_UART2_IS_DEFINED) || defined(USBDM_UART3_IS_DEFINED) || defined(USBDM_UART4_IS_DEFINED)
#include "uart.h"
#endif
#if defined(USBDM_LPUART0_IS_DEFINED) || defined(USBDM_LPUART1_IS_DEFINED) || defined(USBDM_LPUART2_IS_DEFINED)
#include "lpuart.h"
#endif
#include "console.h"

 /*
  * *****************************
  * *** DO NOT EDIT THIS FILE ***
  * *****************************
  *
  * This file is generated automatically.
  * Any manual changes will be lost.
  */

namespace USBDM {

/**
 * @addtogroup CONSOLE_Group Console
 * @brief Console serial interface
 * @{
 */

// Console instance
Console console;

/*
 * Initialises the Console
 *
 * @param baudrate - the baud rate to use e.g. DEFAULT_BAUD_RATE
 */
extern "C"
void console_initialise() {
   console.setBaudRate(defaultBaudRate);
}

/*
 * Set Console baud rate
 *
 * @param baudRate - the baud rate to use
 */
extern "C"
void console_setBaudRate(int baudRate = defaultBaudRate) {
   console.setBaudRate(baudRate);
}

/*
 * Transmits a single character to Console
 *
 * @param ch - character to send
 */
extern "C"
void console_txChar(int ch) {
   console.write((char)ch);
}

/*
 * Receives a single character fropm Console (blocking)
 *
 * @return - character received
 */
extern "C"
int console_rxChar(void) {
   int ch = console.readChar();
   if (ch == '\r') {
      ch = '\n';
   }
   return ch;
}

/**
 * @}
 */

} // End namespace USBDM
